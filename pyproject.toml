[tool.poetry]
name = "media-parser"
version = "1.1.1"
description = "API for parsing media from social networks"
authors = ["Jag_k <me@jagk.dev>"]
maintainers = ["Jag_k <me@jagk.dev>"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Natural Language :: English",
    "Natural Language :: Russian",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
homepage = "https://github.com/jag-k/media-parser#readme"
repository = "https://github.com/jag-k/media-parser"
documentation = "https://github.com/jag-k/media-parser#clients"
readme = "README.md"
license = "MIT"
keywords = ["media-parser", "poetry", "tiktok", "youtube", "reddit", "twitter"]
packages = [
    { include = "media_parser/client.py" },
    { include = "media_parser/models" },
    { include = "media_parser/__init__.py" },
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.0"
aiohttp = "^3.8.5"
sentry-sdk = { version = "^1.28.1", extras = ["fastapi", "httpx", "pure_eval", "pymongo"] }
contextvars = "^2.4"
pydantic = { version = "^1.10.9", extras = ["dotenv"] }
jsonref = "^1.1.0"
pytube = "^15.0.0"
uvicorn = "^0.23.1"
motor = "^3.1.2"
async-lru = "^2.0.2"
pyyaml = "^6.0.1"

[tool.poetry.extras]
server = ["uvicorn", "motor", "fastapi", "contextvars", "pytube", "jsonref", "async-lru"]
sentry = ["sentry-sdk"]
all = ["uvicorn", "motor", "fastapi", "contextvars", "pytube", "jsonref", "async-lru", "sentry-sdk"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.280"
pre-commit = "^3.3.2"
motor-types = "^1.0.0b2"
black = { version = "^23.7.0", extras = ["d"] }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.pytest_cache
  | \.mypy_cache
  | config
)/
'''

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E", # pyflakes
    "F", # pycodestyle errors
    "W", # pycodestyle warnings
    "UP", # pyupgrade
    "I", # isort
    "C4", # flake8-comprehensions
    "N", # pep8-naming
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "INT", # flake8-gettext
    "PTH", # flake8-use-pathlib
    "FLY", # flynt
    "RUF", # ruff-specific rules
]
src = ["media_parser"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F405", "F811", "N999"]
"__main__.py" = ["E402", "F401", "F403", "F405", "F811", "N999"]
